from collections import Counter

# how to # find intersect of two lists
# l1 = [1, 2, 1, 3, 3, 2, 1, 5, 6, 6]
# l2 = [1, 2, 3]
# l3 = set(l1) & set(l2)                                      # '&' operator can be used as intersecting two lists
# print(list(l3))
# #or
# l3 = []
# for i in l1:
#     if i in l2:
#         if i not in l3:
#             l3.append(i)
#
# print(l3)

# How to find non repetitive or unisect element of two lists
# l1 = [1, 2, 1, 3, 3, 2, 1, 5, 6, 6]
# l2 = [1, 2, 3]
# l3 = set(l1) - set(l2)                                      #'-' operator can be used as unisecting two lists
# print(list(l3))
# #or
# l3 = []
# for i in l1:
#     if i not in l2:
#         if i not in l3:
#             l3.append(i)
#
# print(l3)

# How to find count of each repetitive element of list
# lis = [1, 2, 1, 3, 3, 2, 1, 5, 6, 6]
# d = {i: lis.count(i) for i in lis}                          # dictionary comprehension
# print(d)
# #or
# a = dict(Counter(lis))
# print(a)

# Deep copy and shallow copy somehow
# p = [1, 2, 3, 4]
# q = (p, 'xyz', 'def', p)
# p.append('abc')
# print(p, q)
# q[0] + q[3]
# print(p, q)
# q[0][1] = 27
# print(p, q)

# Exeption Handling

try:
    a = 2
    b = a / 0
except:
    print("In exception block")
    exit()
finally:
    print("In finally block")
